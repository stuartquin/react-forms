{"version":3,"sources":["../src/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["const isValidEmail = (email) => {\n  if (!email) {\n    return false;\n  }\n  return email.indexOf('@') > -1 && email.lastIndexOf('.') > email.indexOf('@');\n};\n\nconst isValid = (state) => {\n  return isValidEmail(state.email) && state.email === state.email2 && state.agree;\n}\n\nvar Signup = React.createClass({\n  getInitialState: function() {\n    return this.getDefaultState();\n  },\n\n  getDefaultState: function() {\n    return {\n      email: '',\n      email2: '',\n      role: '',\n      saving: false,\n      agree: false\n    }\n  },\n\n  submit: function() {\n    this.setState({'saving': true});\n    API.saveUser(this.state.email, this.state.role).then(function(user) {\n      this.setState(this.getDefaultState());\n    }.bind(this));\n  },\n\n  updateField: function(field, value) {\n    var state = {};\n    state[field] = value;\n    this.setState(state);\n  },\n\n  render: function() {\n    if (this.state.saving) {\n      return (\n        <div className='saving'>Saving...</div>\n      );\n    }\n\n    if (isValidEmail(this.state.email)) {\n      var emailClass = 'success';\n    } else {\n      var emailClass = 'error';\n    }\n\n    return (\n      <div>\n        <p>\n          <input\n            placeholder='Email'\n            className={emailClass}\n            value={this.state.email}\n            onChange={(e) => this.updateField('email', e.target.value)} />\n        </p>\n\n        <p>\n          <EmailField\n            placeholder='Confirm Email'\n            email={this.state.email2}\n            onUpdate={(value) => this.updateField('email2', value)} />\n        </p>\n\n        <p>\n          <RoleField\n            role={this.state.role}\n            onUpdate={(value) => this.updateField('role', value)} />\n        </p>\n\n        <p>\n          <label>Agree:\n            <input\n              type='checkbox'\n              onClick={(e) => this.updateField('agree', e.target.checked)}\n              checked={this.state.agree} />\n          </label>\n        </p>\n\n        <p>\n          <input\n            type='button'\n            disabled={!isValid(this.state)}\n            onClick={this.submit}\n            value='Save' />\n        </p>\n\n        <Debug data={this.state} />\n\n      </div>\n    );\n  },\n});\n\nReactDOM.render(\n  <Signup name='World' />,\n  document.getElementById('container')\n);\n\n"]}