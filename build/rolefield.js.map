{"version":3,"sources":["../src/rolefield.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAW;AAC7B,MAAI,MAAM,WAAN,CAAkB,MAAlB,KAA6B,CAA7B,EAAgC;AAClC,WAAQ,gCAAR,CADkC;GAApC;;AAIA,MAAI,QAAQ,IAAI,MAAJ,CAAW,MAAM,KAAN,EAAa,IAAxB,CAAR,CALyB;;AAO7B,SACE;;MAAI,WAAU,aAAV,EAAJ;IACG,MAAM,WAAN,CAAkB,GAAlB,CAAsB,UAAC,UAAD;aACrB,4BAAI,SAAS;iBAAM,MAAM,gBAAN,CAAuB,UAAvB;SAAN;AACX,iCAAyB;AACvB,kBAAQ,WAAW,OAAX,CAAmB,KAAnB,EAA0B,aAAW,MAAM,KAAN,GAAY,WAAvB,CAAlC;SADF,EADF;KADqB,CADzB;GADF,CAP6B;CAAX;;IAoBd;;;AACJ,qBAAY,KAAZ,EAAmB;;;6FACX,QADW;;AAEjB,UAAK,KAAL,GAAa;AACX,mBAAa,EAAb;AACA,kBAAY,MAAM,IAAN;KAFd,CAFiB;;GAAnB;;;;iCAQa,KAAK;;;AAChB,UAAM,QAAQ,IAAI,WAAJ,EAAR,CADU;AAEhB,UAAI,QAAJ,GAAe,IAAf,CAAoB,UAAC,KAAD,EAAW;AAC7B,YAAI,GAAJ,EAAS;AACP,iBAAK,QAAL,CAAc;AACZ,yBAAa,MAAM,MAAN,CAAa;qBAAK,EAAE,WAAF,GAAgB,OAAhB,CAAwB,KAAxB,IAAiC,CAAC,CAAD;aAAtC,CAA1B;WADF,EADO;SAAT,MAIO;AACL,iBAAK,QAAL,CAAc;AACZ,yBAAa,EAAb;WADF,EADK;SAJP;OADkB,CAApB,CAFgB;;;;kCAeJ,YAAY;AACxB,WAAK,QAAL,CAAc;AACZ,oBAAY,UAAZ;AACA,qBAAa,EAAb;OAFF,EADwB;AAKxB,WAAK,KAAL,CAAW,QAAX,CAAoB,UAApB,EALwB;;;;6BAQjB;;;AACP,aACE;;UAAK,WAAU,cAAV,EAAL;QACE;AACE,uBAAY,MAAZ;AACA,iBAAO,KAAK,KAAL,CAAW,UAAX;AACP,oBAAU,kBAAC,CAAD,EAAO;AACf,mBAAK,QAAL,CAAc,EAAC,YAAY,EAAE,MAAF,CAAS,KAAT,EAA3B,EADe;AAEf,mBAAK,YAAL,CAAkB,EAAE,MAAF,CAAS,KAAT,CAAlB,CAFe;AAGf,mBAAK,KAAL,CAAW,QAAX,CAAoB,EAAE,MAAF,CAAS,KAAT,CAApB,CAHe;WAAP,EAHZ,CADF;QAUE,oBAAC,WAAD;AACE,4BAAkB,0BAAC,UAAD;mBAAgB,OAAK,aAAL,CAAmB,UAAnB;WAAhB;AAClB,iBAAO,KAAK,KAAL,CAAW,UAAX;AACP,uBAAa,KAAK,KAAL,CAAW,WAAX;SAHf,CAVF;OADF,CADO;;;;;EAhCa,MAAM,SAAN;;AAoDvB","file":"rolefield.js","sourcesContent":["const Suggestions = (props) => {\n  if (props.suggestions.length === 0) {\n    return (<div />);\n  }\n\n  var regex = new RegExp(props.value, 'gi');\n\n  return (\n    <ul className='suggestions'>\n      {props.suggestions.map((suggestion) =>\n        <li onClick={() => props.selectSuggestion(suggestion)}\n          dangerouslySetInnerHTML={{\n            __html: suggestion.replace(regex, '<strong>'+props.value+'</strong>')\n          }}>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nclass RoleField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: [],\n      suggestion: props.role\n    };\n  }\n\n  autocomplete(val) {\n    const value = val.toLowerCase();\n    API.getRoles().then((roles) => {\n      if (val) {\n        this.setState({\n          suggestions: roles.filter(r => r.toLowerCase().indexOf(value) > -1)\n        });\n      } else {\n        this.setState({\n          suggestions: []\n        });\n      }\n    });\n  }\n\n  setSuggestion(suggestion) {\n    this.setState({\n      suggestion: suggestion,\n      suggestions: []\n    });\n    this.props.onUpdate(suggestion);\n  }\n\n  render() {\n    return (\n      <div className='autocomplete'>\n        <input\n          placeholder='Role'\n          value={this.state.suggestion}\n          onChange={(e) => {\n            this.setState({suggestion: e.target.value});\n            this.autocomplete(e.target.value);\n            this.props.onUpdate(e.target.value);\n          }} />\n\n        <Suggestions\n          selectSuggestion={(suggestion) => this.setSuggestion(suggestion)}\n          value={this.state.suggestion}\n          suggestions={this.state.suggestions}\n        />\n      </div>\n    );\n  }\n};\n"]}